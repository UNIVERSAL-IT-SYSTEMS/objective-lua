require 'olua'

do
	@implementation TestClass : olua.lib.Object
		- noarg
			return 99
		end
		
		- onearg: a
			return a
		end
		
		- twoarg: a and: b
			return a, b
		end
		
		- threearg: a and: b and: c
			return a, b, c
		end
		
		- threeargmulti: a and: b and: c, ...
			return a, b, c, ...
		end
		 
		- onelua, a
			return a
		end
		
		- twolua, a, b
			return a, b
		end
		
		- threeluamulti, a, b, c, ...
			return a, b, c, ...
		end
	@end

	local o1 = [[TestClass alloc] init]
	
	test(function() return [o1 noarg] end, {99})
	test(function() return [o1 onearg: 99] end, {99})
	test(function() return [o1 twoarg: 99 and: 98] end, {99, 98})
	test(function() return [o1 threearg: 99 and: 98 and: 97] end, {99, 98, 97})
	test(function() return [o1 threeargmulti: 99 and: 98 and: 97, 96, 95, 94] end, {99, 98, 97, 96, 95, 94})
	test(function() return [o1 onelua, 99] end, {99})
	test(function() return [o1 twolua, 99, 98] end, {99, 98})
	test(function() return [o1 threeluamulti, 99, 98, 97, 96] end, {99, 98, 97, 96})
end
